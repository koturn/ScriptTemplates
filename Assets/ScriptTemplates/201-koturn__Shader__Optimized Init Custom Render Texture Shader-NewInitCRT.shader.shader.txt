Shader "Custom/CRT/#SCRIPTNAME#"
{
    Properties
    {
        _MainTex ("Main Texture", 2D) = "white" {}
        _Color ("Tint color", Color) = (1.0, 1.0, 1.0, 1.0)
    }

    SubShader
    {
        Lighting Off
        Blend One Zero

        Pass
        {
            Name "INITIALIZE"

            CGPROGRAM
            #pragma vertex InitCustomRenderTextureVertexShaderEx
            #pragma fragment frag
            #pragma target 3.0

            #include "UnityCustomRenderTexture.cginc"

            //! Main texture.
            UNITY_DECLARE_TEX2D(_MainTex);
            //! Tint color.
            uniform half4 _Color;


            /*!
             * @brief Fragment shader function.
             * @param [in] fi  Input data.
             * @return Output color.
             */
            half4 frag(v2f_init_customrendertexture in) : SV_Target
            {
                return UNITY_SAMPLE_TEX2D(_Tex, in.texcoord.xy) * _Color;
            }


            /*!
             * @brief Compute cube direction.
             *
             * This function is an optimize version of CustomRenderTextureComputeCubeDirection() in UnityCustomRenderTexture.cginc.
             *
             * @param [in] globalTexcoord  Global texture coordinate.
             * @return Cube direction.
             */
            float3 CustomRenderTextureComputeCubeDirectionEx(float2 globalTexcoord)
            {
                const float2 xy = globalTexcoord * 2.0 - 1.0;
                return normalize(_CustomRenderTextureCubeFace == 0.0 ? float3(1.0, -xy.y, -xy.x)
                    : _CustomRenderTextureCubeFace == 1.0 ? float3(-1.0, -xy.y, xy.x)
                    : _CustomRenderTextureCubeFace == 2.0 ? float3(xy.x, 1.0, xy.y)
                    : _CustomRenderTextureCubeFace == 3.0 ? float3(xy.x, -1.0, -xy.y)
                    : _CustomRenderTextureCubeFace == 4.0 ? float3(xy.x, -xy.y, 1.0)
                    : float3(-xy.x, -xy.y, -1.0));
            }


            /*!
             * @brief Vertex shader function.
             * @param [in] IN  Input data.
             * @return Output data.
             */
            v2f_init_customrendertexture InitCustomRenderTextureVertexShaderEx(appdata_init_customrendertexture v)
            {
                v2f_init_customrendertexture o;
                o.vertex = UnityObjectToClipPos(v.vertex);
                o.texcoord = float3(v.texcoord.xy, CustomRenderTexture3DTexcoordW);
                o.direction = CustomRenderTextureComputeCubeDirectionEx(v.texcoord.xy);
                return o;
            }
            ENDCG
        }
    }

    // CustomEditor "#SCRIPTNAME#GUI"
}
